/*
 * Script for importing apple health export, filtering for relevant data, and outputing
 * json of filtered results
 *
 * Usage: node heath.js
 */
const fs = require("fs");
const path = require("path");

const {
  HEALTH_BODY_MASS_KEY,
  HEALTH_WATER_KEY,
} = require("./src/constants.js");
const { buildHealthMap } = require("./src/marshal.js");

const healthKeys = new Set([HEALTH_BODY_MASS_KEY, HEALTH_WATER_KEY]);
const dataPath = path.resolve(__dirname, "src", "data", "temp_health.json");
const outPath = path.resolve(__dirname, "src", "data", "healthData.js");

const generateModuleContent = (
  healthData
) => `// AUTOGENERATED FILE (from health.js)
// DO NOT MANUALLY UPDATE THIS FILE UNLESS YOU KNOW WHAT YOU'RE DOING
// ---------------------------------------------------------------------------
module.exports = { healthData: ${JSON.stringify(healthData)} };
`;

try {
  const rawHealthData = JSON.parse(fs.readFileSync(dataPath, "utf8"));
  const filteredData = Object.keys(rawHealthData)
    .filter((key) => healthKeys.has(key))
    .reduce((healthMap, key) => {
      healthMap[key] = rawHealthData[key];
      return healthMap;
    }, {});

  const healthData = buildHealthMap(filteredData);
  fs.writeFileSync(outPath, generateModuleContent(healthData));
} catch (error) {
  console.log("Error while generating health data!");
  console.log(error);
  process.exit(1);
}

console.log(`Generated ${outPath}!`);
process.exit(0);
